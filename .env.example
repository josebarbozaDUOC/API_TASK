# .env.example
# =====================================
# TODO API TASK - Configuration
# =====================================
# Copy this file to .env for local overrides

# === Application ===
APP_NAME=Todo API Task
APP_VERSION=1.0.0
ENVIRONMENT=development

# === Server ===
HOST=0.0.0.0
PORT=8000

# === Database Paths ===
# Relative to container's WORKDIR (/app) or project root
LOG_DB_PATH=storage/logs.db #sqlite
TASK_DB_PATH=storage/tasks.db #sqlite

# === Repository ===
# Options: memory, sqlite, postgresql, mysql (luego se añadiran otras db: mongodb, redis)
REPOSITORY_TYPE=mysql
#REPOSITORY_TYPE=sqlite     # necesario para pytest completo
TEST_REPOSITORY_TYPE=sqlite # por integrar como deafault para pytest

# === PostgreSQL (DUMMY VALUES - Override in .env) ===
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=dummy_db        # ⚠️ DUMMY - cambiar en .env
POSTGRES_USER=dummy_user    # ⚠️ DUMMY - cambiar en .env
POSTGRES_PASSWORD=dummy_pw  # ⚠️ DUMMY - cambiar en .env

# === MySQL (DUMMY VALUES - Override in .env) ===
MYSQL_HOST=mysql
MYSQL_PORT=3306              # 3306 default
MYSQL_LOCAL_PORT=3307        # Para test
MYSQL_DATABASE=dummy_db      # ⚠️ DUMMY - cambiar en .env
MYSQL_USER=dummy_user        # ⚠️ DUMMY - cambiar en .env
MYSQL_PASSWORD=dummy_pw      # ⚠️ DUMMY - cambiar en .env
# MySQL root password for Docker
MYSQL_ROOT_PASSWORD=dummy_root_pw  # ⚠️ DUMMY - cambiar en .env

# === Logging ===
LOG_LEVEL=INFO

# === CORS ===
# Comma separated origins
CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# === Secrets (use dummy values here) ===
SECRET_KEY=your-secret-key-here-change-in-production
JWT_SECRET=your-jwt-secret-here-change-in-production